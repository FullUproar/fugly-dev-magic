{
  "openapi": "3.1.0",
  "info": {
    "title": "Home Development Server API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://fugly-dev-magic-odnn26h1y-full-uproar-games.vercel.app"
    }
  ],
  "paths": {
    "/api/ping": {
      "get": {
        "summary": "Check if server is alive",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/claude": {
      "post": {
        "summary": "Claude operations. action='execute' for code edits, 'command' for system commands with priority, 'plan' for task planning, 'analyze-page' for web analysis, 'verify-changes' to check implementations",
        "operationId": "claude",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/git": {
      "post": {
        "summary": "Git operations. action='status', 'branch' (with subAction create/switch), 'commit', 'push', 'diff'",
        "operationId": "git",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/project": {
      "post": {
        "summary": "Project operations. action='list' to get projects, 'npm-install' for packages, 'test' to run tests, 'deploy' for Vercel, 'search' for files",
        "operationId": "project",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/page": {
      "post": {
        "summary": "Page analysis. action='capture' for screenshots, 'compare' for before/after, 'debug-monitor' for errors, 'monitor-journey' for user flows, 'analyze-multiple' for responsive testing",
        "operationId": "page",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/state": {
      "post": {
        "summary": "State management. type='conversation', 'project', 'settings'. Use operation='get' or 'update'",
        "operationId": "state",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/queue": {
      "post": {
        "summary": "Command queue. action='status', 'command' (with commandId), 'cancel'",
        "operationId": "queue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/cli": {
      "post": {
        "summary": "CLI control. action='start', 'command', 'output', 'stop', 'key'",
        "operationId": "cli",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/logs": {
      "post": {
        "summary": "Logging. type='recent' for recent activity, 'summary' for daily summary",
        "operationId": "logs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/watchdog": {
      "post": {
        "summary": "Process monitoring. action='status' to check processes, 'extend' to extend timeout",
        "operationId": "watchdog",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/projects/list": {
      "get": {
        "summary": "Get list of all available projects",
        "operationId": "getProjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/queue/status": {
      "get": {
        "summary": "Get current command queue status",
        "operationId": "getQueueStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/logs/recent": {
      "get": {
        "summary": "Get recent activity logs",
        "operationId": "getRecentLogs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/quick/analyze": {
      "post": {
        "summary": "Quick page analysis. Pass url or project='fu' for Full Uproar",
        "operationId": "quickAnalyze",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/quick/debug": {
      "post": {
        "summary": "Quick debug check for console errors. Pass url or project='fu'",
        "operationId": "quickDebug",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/execute": {
      "post": {
        "summary": "Execute any command with priority. The main way to run commands.",
        "operationId": "executeCommand",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/code/edit": {
      "post": {
        "summary": "Edit code files using Claude. The main way to modify code.",
        "operationId": "codeEdit",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "post": {
        "summary": "Search for files or code. Pass pattern for files, or use type='code' with query",
        "operationId": "search",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/claude/plan": {
      "post": {
        "summary": "Ask Claude to create a development plan without implementing code. Use this for planning complex tasks, architecture decisions, or implementation strategies.",
        "operationId": "claudePlan",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "task": {
                    "type": "string",
                    "description": "Task or problem to plan"
                  },
                  "project": {
                    "type": "string",
                    "description": "Project name"
                  },
                  "working_dir": {
                    "type": "string",
                    "description": "Working directory path"
                  },
                  "conversation_id": {
                    "type": "string",
                    "description": "Optional: Continue existing conversation"
                  }
                },
                "required": [
                  "task"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/state/conversation": {
      "post": {
        "summary": "Add messages or update conversation state",
        "operationId": "updateConversation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "conversation_id": {
                    "type": "string",
                    "description": "Conversation ID"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message to add"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "user",
                      "assistant"
                    ],
                    "description": "Message role"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "normal",
                      "planning"
                    ],
                    "description": "Conversation mode"
                  },
                  "context": {
                    "type": "object",
                    "description": "Additional context data"
                  }
                },
                "required": [
                  "conversation_id"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/state/project": {
      "post": {
        "summary": "Update project state with current branch, working files, or todo list",
        "operationId": "updateProjectState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Project path"
                  },
                  "last_command": {
                    "type": "string",
                    "description": "Last executed command"
                  },
                  "current_branch": {
                    "type": "string",
                    "description": "Current git branch"
                  },
                  "working_files": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of working files"
                  },
                  "todo_list": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Project todo list"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Project notes"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/state/settings": {
      "post": {
        "summary": "Update system settings",
        "operationId": "updateSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Setting key"
                  },
                  "value": {
                    "description": "Setting value (any type)"
                  }
                },
                "required": [
                  "key",
                  "value"
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/status": {
      "get": {
        "summary": "Get command queue status with GPT-friendly summary. Shows queued commands, running commands, and wait times.",
        "operationId": "getQueueStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/command/{command_id}": {
      "get": {
        "summary": "Get status of a specific queued command",
        "operationId": "getCommandStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queue/command/{command_id}/cancel": {
      "post": {
        "summary": "Cancel a queued command (only works if not yet running)",
        "operationId": "cancelCommand",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    }
  }
}